child_process(40857)::clone(https://github.com/metosin/2016-09-09-clojure-training):stderr:data: Cloning into 'undefined\meto--09-01-2020--aPz2sa3rs3BdvmNrkvmpga/2016-09-09-clojure-training'...
child_process(40857)::clone(https://github.com/metosin/2016-09-09-clojure-training):stderr:data: POST git-upload-pack (165 bytes)
child_process(40857)::clone(https://github.com/metosin/2016-09-09-clojure-training):stderr:data: remote: Enumerating objects: 246, done.        
child_process(40857)::clone(https://github.com/metosin/2016-09-09-clojure-training):stderr:data: [Kchild_process(40857)::clone(https://github.com/metosin/2016-09-09-clojure-training):stderr:data: [KReceiving objects:   3% (8/246)child_process(40857)::clone(https://github.com/metosin/2016-09-09-clojure-training):stderr:data: [KReceiving objects:   4% (10/246)[KReceiving objects:   5% (13/246)child_process(40857)::clone(https://github.com/metosin/2016-09-09-clojure-training):stderr:data: [KReceiving objects:   6% (15/246)[KReceiving objects:   7% (18/246)[KReceiving objects:   8% (20/246)[KReceiving objects:   9% (23/246)[KReceiving objects:  10% (25/246)[KReceiving objects:  11% (28/246)[KReceiving objects:  12% (30/246)child_process(40857)::clone(https://github.com/metosin/2016-09-09-clojure-training):stderr:data: [KReceiving objects:  13% (32/246)[KReceiving objects:  14% (35/246)[KReceiving objects:  15% (37/246)child_process(40857)::clone(https://github.com/metosin/2016-09-09-clojure-training):stderr:data: [KReceiving objects:  16% (40/246)child_process(40857)::clone(https://github.com/metosin/2016-09-09-clojure-training):stderr:data: [KReceiving objects:  20% (50/246)child_process(40857)::clone(https://github.com/metosin/2016-09-09-clojure-training):stderr:data: [KReceiving objects:  21% (52/246)[KReceiving objects:  22% (55/246)child_process(40857)::clone(https://github.com/metosin/2016-09-09-clojure-training):stderr:data: [KReceiving objects:  23% (57/246)[KReceiving objects:  24% (60/246)[KReceiving objects:  25% (62/246)[KReceiving objects:  26% (64/246)[KReceiving objects:  27% (67/246)[KReceiving objects:  28% (69/246)[KReceiving objects:  29% (72/246)[KReceiving objects:  30% (74/246)child_process(40857)::clone(https://github.com/metosin/2016-09-09-clojure-training):stderr:data: [KReceiving objects:  31% (77/246)[KReceiving objects:  32% (79/246)[KReceiving objects:  33% (82/246)[KReceiving objects:  34% (84/246)child_process(40857)::clone(https://github.com/metosin/2016-09-09-clojure-training):stderr:data: [KReceiving objects:  35% (87/246)child_process(40857)::clone(https://github.com/metosin/2016-09-09-clojure-training):stderr:data: [KReceiving objects:  36% (89/246)[KReceiving objects:  37% (92/246)[KReceiving objects:  38% (94/246)[KReceiving objects:  39% (96/246)[KReceiving objects:  40% (99/246)child_process(40857)::clone(https://github.com/metosin/2016-09-09-clojure-training):stderr:data: [KReceiving objects:  41% (101/246)[KReceiving objects:  42% (104/246)[KReceiving objects:  43% (106/246)child_process(40857)::clone(https://github.com/metosin/2016-09-09-clojure-training):stderr:data: [KReceiving objects:  44% (109/246)child_process(40857)::clone(https://github.com/metosin/2016-09-09-clojure-training):stderr:data: [KReceiving objects:  48% (119/246)[KReceiving objects:  49% (121/246)[KReceiving objects:  50% (123/246)child_process(40857)::clone(https://github.com/metosin/2016-09-09-clojure-training):stderr:data: [KReceiving objects:  51% (126/246)[KReceiving objects:  52% (128/246)[KReceiving objects:  53% (131/246)[KReceiving objects:  54% (133/246)[KReceiving objects:  55% (136/246)child_process(40857)::clone(https://github.com/metosin/2016-09-09-clojure-training):stderr:data: [KReceiving objects:  56% (138/246)[KReceiving objects:  57% (141/246)[KReceiving objects:  58% (143/246)[KReceiving objects:  59% (146/246)[KReceiving objects:  60% (148/246)[KReceiving objects:  61% (151/246)[KReceiving objects:  62% (153/246)[KReceiving objects:  63% (155/246)[KReceiving objects:  64% (158/246)[KReceiving objects:  65% (160/246)[KReceiving objects:  66% (163/246)[KReceiving objects:  67% (165/246)[KReceiving objects:  68% (168/246)[KReceiving objects:  69% (170/246)child_process(40857)::clone(https://github.com/metosin/2016-09-09-clojure-training):stderr:data: [KReceiving objects:  70% (173/246)[KReceiving objects:  71% (175/246)[KReceiving objects:  72% (178/246)[KReceiving objects:  73% (180/246)[KReceiving objects:  74% (183/246)[Kchild_process(40857)::clone(https://github.com/metosin/2016-09-09-clojure-training):stderr:data: Receiving objects:  75% (185/246)[KReceiving objects:  76% (187/246)child_process(40857)::clone(https://github.com/metosin/2016-09-09-clojure-training):stderr:data: remote: Total 246 (delta 0), reused 0 (delta 0), pack-reused 246        
child_process(40857)::clone(https://github.com/metosin/2016-09-09-clojure-training):stderr:data: [KReceiving objects:  80% (197/246)[KReceiving objects:  81% (200/246)child_process(40857)::clone(https://github.com/metosin/2016-09-09-clojure-training):stderr:data: [KReceiving objects:  82% (202/246)[KReceiving objects:  83% (205/246)[KReceiving objects:  84% (207/246)[KReceiving objects:  85% (210/246)child_process(40857)::clone(https://github.com/metosin/2016-09-09-clojure-training):stderr:data: [KReceiving objects:  86% (212/246)[KReceiving objects:  87% (215/246)[KReceiving objects:  88% (217/246)[KReceiving objects:  89% (219/246)[KReceiving objects:  90% (222/246)[KReceiving objects:  91% (224/246)[KReceiving objects:  92% (227/246)[KReceiving objects:  93% (229/246)[KReceiving objects:  94% (232/246)[KReceiving objects:  95% (234/246)child_process(40857)::clone(https://github.com/metosin/2016-09-09-clojure-training):stderr:data: [KReceiving objects:  96% (237/246)[KReceiving objects:  97% (239/246)[KReceiving objects:  98% (242/246)[KReceiving objects:  99% (244/246)[KReceiving objects: 100% (246/246)child_process(40857)::clone(https://github.com/metosin/2016-09-09-clojure-training):stderr:data: [KReceiving objects: 100% (246/246), 40.58 KiB | 500.00 KiB/s, done.
child_process(40857)::clone(https://github.com/metosin/2016-09-09-clojure-training):stderr:data: [KResolving deltas:   0% (0/84)child_process(40857)::clone(https://github.com/metosin/2016-09-09-clojure-training):stderr:data: [KResolving deltas:   7% (6/84)[KResolving deltas:  10% (9/84)[KResolving deltas:  13% (11/84)[KResolving deltas:  17% (15/84)child_process(40857)::clone(https://github.com/metosin/2016-09-09-clojure-training):stderr:data: [KResolving deltas:  25% (21/84)child_process(40857)::clone(https://github.com/metosin/2016-09-09-clojure-training):stderr:data: [KResolving deltas:  38% (32/84)[KResolving deltas:  39% (33/84)[KResolving deltas:  41% (35/84)[KResolving deltas:  42% (36/84)[KResolving deltas:  51% (43/84)[KResolving deltas:  54% (46/84)[KResolving deltas:  57% (48/84)[KResolving deltas:  60% (51/84)[KResolving deltas:  63% (53/84)[KResolving deltas:  64% (54/84)[KResolving deltas:  65% (55/84)[KResolving deltas:  66% (56/84)child_process(40857)::clone(https://github.com/metosin/2016-09-09-clojure-training):stderr:data: [KResolving deltas:  76% (64/84)child_process(40857)::clone(https://github.com/metosin/2016-09-09-clojure-training):stderr:data: [KResolving deltas:  84% (71/84)[KResolving deltas:  85% (72/84)[KResolving deltas:  86% (73/84)[KResolving deltas:  90% (76/84)child_process(40857)::clone(https://github.com/metosin/2016-09-09-clojure-training):stderr:data: [KResolving deltas:  92% (78/84)[KResolving deltas:  94% (79/84)[KResolving deltas:  96% (81/84)[KResolving deltas:  97% (82/84)[KResolving deltas:  98% (83/84)[KResolving deltas: 100% (84/84)[KResolving deltas: 100% (84/84), done.
child_process(40857)::clone(https://github.com/metosin/2016-09-09-clojure-training):close()