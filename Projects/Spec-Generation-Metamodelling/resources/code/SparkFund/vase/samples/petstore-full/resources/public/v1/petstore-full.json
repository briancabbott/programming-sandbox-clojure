{
    "swagger": "2.0",
    "info": {
        "description": "This is a sample server Petstore server.\n\n[Learn about Swagger](http://swagger.io) or join the IRC channel `#swagger` on irc.freenode.net.\n\nFor this sample, you can use the api key `special-key` to test the authorization filters\n",
        "version": "1.0.0",
        "title": "Swagger Petstore",
        "termsOfService": "http://helloreverb.com/terms/",
        "contact": {
            "name": "apiteam@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        }
    },
    "host": "localhost:8888",
    "basePath": "/api/petstore-full/v1",
    "schemes": [
        "http"
    ],
    "paths": {
        "/categories": {
            "get": {
                "tags": [
                    "category"
                ],
                "summary": "Find all categories",
                "description": "Returns all categories' id and name",
                "operationId": "findCategories",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Category"
                        }
                    },
                    "404": {
                        "description": "Category not found"
                    }
                }
            },
            "post": {
                "tags": [
                    "category"
                ],
                "summary": "Add new categories to the store",
                "description": "",
                "operationId": "addCategory",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Category object that needs to be added to the store",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/newCategory"
                        }
                    }
                ],
                "responses": {
                    "405": {
                        "description": "Invalid input"
                    }
                },
                "security": [
                    {
                        "petstore_auth": [
                            "write_pets"
                        ]
                    }
                ]
            }
        },
        "/tags": {
            "get": {
                "tags": [
                    "tag"
                ],
                "summary": "Find all tags",
                "description": "Returns all tags' id and name",
                "operationId": "findTags",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Tag"
                        }
                    },
                    "404": {
                        "description": "Tags not found"
                    }
                }
            },
            "post": {
                "tags": [
                    "tag"
                ],
                "summary": "Add new tags to the store",
                "description": "",
                "operationId": "addTag",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Tag object that needs to be added to the store",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/newTag"
                        }
                    }
                ],
                "responses": {
                    "405": {
                        "description": "Invalid input"
                    }
                },
                "security": [
                    {
                        "petstore_auth": [
                            "write_pets"
                        ]
                    }
                ]
            }
        },
        "/pets": {
            "post": {
                "tags": [
                    "pet"
                ],
                "summary": "Add new pets to the store",
                "description": "Example post data looks like:\n{\n  \"payload\": [\n  {\n    \"petstore.pet/id\": 0,\n    \"petstore.pet/category\": [\n      \"petstore.category/id\", 0\n      ],\n    \"petstore.pet/name\": \"doggie\",\n    \"petstore.pet/photoUrls\": [\n      \"http://example.com/photos/1\"\n      ],\n    \"petstore.pet/tags\": [\n      [\"petstore.tag/id\", 0],\n      [\"petstore.tag/id\", 1]\n      ],\n    \"petstore.pet/status\": \"petstore.pet.status/available\"\n    }\n  ]\n}\n\npetstore.pet/category is a reference to petstore.category/id.\nalso, petstore.tags are references to petstore.tag/id.\npetstore.pet/status is one of available, pending or sold under\npetstore.pet.status namespace.\n",
                "operationId": "addPets",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Pet object that needs to be added to the store",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/newPet"
                        }
                    }
                ],
                "responses": {
                    "405": {
                        "description": "Invalid input"
                    }
                },
                "security": [
                    {
                        "petstore_auth": [
                            "write_pets"
                        ]
                    }
                ]
            },
            "put": {
                "tags": [
                    "pet"
                ],
                "summary": "Update existing pets",
                "description": "Example post data looks like:\n{\n  \"payload\": [\n  {\n    \"db/id\": [\"petstore.pet/id\", 0],\n    \"petstore.pet/category\": [\"petstore.category/id\", 1],\n    \"petstore.pet/name\": \"donkey\",\n    \"petstore.pet/photoUrls\": [\"http://example.com/myPhoto/101\"],\n    \"petstore.pet/tags\": [[\"petstore.tag/id\", 3]],\n    \"petstore.pet/status\": \"petstore.pet.status/pending\"\n    }\n  ]\n}\n",
                "operationId": "updatePets",
                "consumes": [
                    "application/json",
                    "application/xml"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Pet object that needs to be added to the store",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/updatePet"
                        }
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "Pet not found"
                    },
                    "405": {
                        "description": "Validation exception"
                    }
                },
                "security": [
                    {
                        "petstore_auth": [
                            "write_pets",
                            "read_pets"
                        ]
                    }
                ]
            },
            "delete": {
                "tags": [
                    "pet"
                ],
                "summary": "Delete pets based on IDs",
                "description": "Example post data looks like:\n{\n  \"payload\": [\n  {\n    \"db/id\": [\"petstore.pet/id\", 0]\n    }\n  ]\n}\n",
                "operationId": "deletePets",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Pet ids to be deleted",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/deletePet"
                        }
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Invalid pet id"
                    }
                },
                "security": [
                    {
                        "petstore_auth": [
                            "write_pets",
                            "read_pets"
                        ]
                    }
                ]
            }
        },
        "/pets/findByStatus": {
            "get": {
                "tags": [
                    "pet"
                ],
                "summary": "Find pets by status",
                "description": "Multiple status values can be provided with comma seperated strings.\nExample input is\n[\"petstore.pet.status/available\", \"petstore.pet.status/pending\"]\n",
                "operationId": "findPetsByStatus",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "statuses",
                        "description": "Status values that need to be considered for filter",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Pet"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid status value"
                    }
                },
                "security": [
                    {
                        "petstore_auth": [
                            "write_pets",
                            "read_pets"
                        ]
                    }
                ]
            }
        },
        "/pet/{petId}": {
            "get": {
                "tags": [
                    "pet"
                ],
                "summary": "Find a pet by ID",
                "description": "Returns a pet when ID < 10.  ID > 10 or nonintegers will simulate API error conditions",
                "operationId": "getPetById",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "petId",
                        "description": "ID of pet that needs to be fetched",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Pet"
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "Pet not found"
                    }
                },
                "security": [
                    {
                        "api_key": []
                    },
                    {
                        "petstore_auth": [
                            "write_pets",
                            "read_pets"
                        ]
                    }
                ]
            }
        },
        "/store/orders": {
            "post": {
                "tags": [
                    "store"
                ],
                "summary": "Place orders for pets",
                "description": "[NOTE: Currently, transacting datetime has a data conversion problem. The fix is on the way.]\n\nExample post data looks like:\n{\n  \"payload\": [\n  {\n    \"petstore.order/id\": 0,\n    \"petstore.order/petId\": [\n      \"petstore.pet/id\", 0\n      ],\n    \"petstore.order/quantity\": 1,\n    \"petstore.order/shipDate\": \"2016-06-12T23:20:50.52Z\",\n    \"petstore.order/status\": \"petstore.order.status/placed\",\n    \"petstore.order/complete\": false\n    }\n  ]\n}\n\npetstore.order/petId is a reference to petstore.pet/id.\npetstore.order/shipDate is a string which takes RFC3339 format.\npetstore.pet/status is one of placed, approved or delievered under\npetstore.order.status namespace.\n",
                "operationId": "placeOrders",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "order placed for purchasing the pet",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/newOrder"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Order"
                        }
                    },
                    "400": {
                        "description": "Invalid Order"
                    }
                }
            },
            "put": {
                "tags": [
                    "store"
                ],
                "summary": "Update orders based on IDs",
                "description": "Example post data looks like:\n{\n  \"payload\": [\n  {\n    \"db/id\": [\"petstore.order/id\", 0],\n    \"petstore.order/petId\": [\"petstore.pet/id\", 1],\n    \"petstore.order/quantity\": 1,\n    \"petstore.order/shipDate\": \"2016-06-12T23:20:50.52Z\",\n    \"petstore.order/status\": \"petstore.order.status/approved\",\n    \"petstore.order/complete\": true\n    }\n  ]\n}\n",
                "operationId": "updateOrders",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "order placed for purchasing the pet",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/updateOrder"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Order"
                        }
                    },
                    "400": {
                        "description": "Invalid Order"
                    }
                }
            },
            "delete": {
                "tags": [
                    "store"
                ],
                "summary": "Delete orders based on IDs",
                "description": "Example post data looks like:\n{\n  \"payload\": [\n  {\n    \"db/id\": [\"petstore.order/id\", 0]\n    }\n  ]\n}\n",
                "operationId": "deleteOrders",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "order ids to be deleted",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/deleteOrder"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successfull operation"
                    },
                    "400": {
                        "description": "Invalid request"
                    },
                    "404": {
                        "description": "Order not found"
                    }
                }
            }
        },
        "/store/order/{orderId}": {
            "get": {
                "tags": [
                    "store"
                ],
                "summary": "Find purchase order by ID",
                "description": "For valid response try integer IDs with value <= 5 or > 10. Other values will generated exceptions",
                "operationId": "getOrderById",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "orderId",
                        "description": "ID of pet that needs to be fetched",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Order"
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "Order not found"
                    }
                }
            }
        },
        "/users": {
            "post": {
                "tags": [
                    "user"
                ],
                "summary": "Add new users",
                "description": "Example post data looks like:\n{\n  \"payload\": [\n  {\n    \"petstore.user/id\": 0,\n    \"petstore.user/username\": \"who\",\n    \"petstore.user/firstName\": \"John\",\n    \"petstore.user/lastName\": \"Doe\",\n    \"petstore.user/email\": \"who@example.com\",\n    \"petstore.user/password\": \"password0\",\n    \"petstore.user/phone\": \"123-456-7890\",\n    \"petstore.user/userStatus\": 0\n    }\n  ]\n}\n",
                "operationId": "createUser",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Created user objects",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/newUser"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            },
            "put": {
                "tags": [
                    "user"
                ],
                "summary": "Updated existing users",
                "description": "Example post data looks like: { \"payload\": [ { \"db/id\": [\"petstore.user/username\", \"who\"], \"petstore.user/firstName\": \"Wendi\", \"petstore.user/lastName\": \"Wade\", \"petstore.user/email\": \"wendi.wade@example.com\", \"petstore.user/password\": \"new-password\"} ] }\n",
                "operationId": "updateUser",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "users whose data need to be updated",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/updateUser"
                        }
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Invalid user supplied"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "user"
                ],
                "summary": "Delete users based on usernames",
                "description": "Example post data looks like:\n{\n  \"payload\": [\n  {\n    \"db/id\": [\"petstore.user/username\", \"who\"]\n    }\n  ]\n}\n",
                "operationId": "deleteUser",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "The name that needs to be deleted",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/deleteUser"
                        }
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Invalid username supplied"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            }
        },
        "/users/login": {
            "get": {
                "tags": [
                    "user"
                ],
                "summary": "Logs user into the system",
                "description": "",
                "operationId": "loginUser",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "username",
                        "description": "The user name for login",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "password",
                        "description": "The password for login in clear text",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid username/password supplied"
                    }
                }
            }
        },
        "/users/logout": {
            "get": {
                "tags": [
                    "user"
                ],
                "summary": "Logs out current logged in user session",
                "description": "",
                "operationId": "logoutUser",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/user/{username}": {
            "get": {
                "tags": [
                    "user"
                ],
                "summary": "Get a user by username",
                "description": "",
                "operationId": "getUserByName",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "username",
                        "description": "The name that needs to be fetched. Use user1 for testing.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    },
                    "400": {
                        "description": "Invalid username supplied"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            }
        }
    },
    "securityDefinitions": {
        "api_key": {
            "type": "apiKey",
            "name": "api_key",
            "in": "header"
        },
        "petstore_auth": {
            "type": "oauth2",
            "authorizationUrl": "http://petstore.swagger.io/api/oauth/dialog",
            "flow": "implicit",
            "scopes": {
                "write_pets": "modify pets in your account",
                "read_pets": "read your pets"
            }
        }
    },
    "definitions": {
        "User": {
            "type": "object",
            "properties": {
                "petstore.user/id": {
                    "type": "integer",
                    "format": "int64"
                },
                "petstore.user/username": {
                    "type": "string"
                },
                "petstore.user/firstName": {
                    "type": "string"
                },
                "petstore.user/lastName": {
                    "type": "string"
                },
                "petstore.use/email": {
                    "type": "string"
                },
                "petstore.user/password": {
                    "type": "string"
                },
                "petstore.user/phone": {
                    "type": "string"
                },
                "petstire.user/userStatus": {
                    "type": "integer",
                    "format": "int32",
                    "description": "User Status"
                }
            }
        },
        "newUser": {
            "type": "object",
            "properties": {
                "payload": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "required": [
                            "petstore.user/id",
                            "petstore.user/username"
                        ],
                        "properties": {
                            "petstore.user/id": {
                                "type": "integer",
                                "format": "int64"
                            },
                            "petstore.user/username": {
                                "type": "string"
                            },
                            "petstore.user/firstName": {
                                "type": "string"
                            },
                            "petstore.user/lastName": {
                                "type": "string"
                            },
                            "petstore.use/email": {
                                "type": "string"
                            },
                            "petstore.user/password": {
                                "type": "string"
                            },
                            "petstore.user/phone": {
                                "type": "string"
                            },
                            "petstire.user/userStatus": {
                                "type": "integer",
                                "format": "int32",
                                "description": "User Status"
                            }
                        }
                    }
                }
            }
        },
        "updateUser": {
            "type": "object",
            "properties": {
                "payload": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "required": [
                            "db/id"
                        ],
                        "properties": {
                            "db/id": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "petstore.user/firstName": {
                                "type": "string"
                            },
                            "petstore.user/lastName": {
                                "type": "string"
                            },
                            "petstore.use/email": {
                                "type": "string"
                            },
                            "petstore.user/password": {
                                "type": "string"
                            },
                            "petstore.user/phone": {
                                "type": "string"
                            },
                            "petstire.user/userStatus": {
                                "type": "integer",
                                "format": "int32"
                            }
                        }
                    }
                }
            }
        },
        "deleteUser": {
            "type": "object",
            "properties": {
                "payload": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "required": [
                            "db/id"
                        ],
                        "properties": {
                            "db/id": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                },
                                "description": "for example, {\"db/id\" [\"petstore.user/usernmae\" \"who\"]}"
                            }
                        }
                    }
                }
            }
        },
        "Category": {
            "type": "object",
            "properties": {
                "petstore.category/id": {
                    "type": "integer",
                    "format": "int64"
                },
                "petstore.category/name": {
                    "type": "string"
                }
            }
        },
        "newCategory": {
            "type": "object",
            "properties": {
                "payload": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "required": [
                            "petstore.category/id",
                            "petstore.category/name"
                        ],
                        "properties": {
                            "petstore.category/id": {
                                "type": "integer",
                                "format": "int64"
                            },
                            "petstore.category/name": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "Pet": {
            "type": "object",
            "properties": {
                "petstore.pet/id": {
                    "type": "integer",
                    "format": "int64"
                },
                "petstore.pet/category": {
                    "$ref": "#/definitions/Category"
                },
                "petstore.pet/name": {
                    "type": "string",
                    "example": "doggie"
                },
                "petstore.pet/photoUrls": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "petstore.pet/tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Tag"
                    }
                },
                "status": {
                    "type": "string",
                    "description": "pet status in the store"
                }
            }
        },
        "newPet": {
            "type": "object",
            "properties": {
                "payload": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "required": [
                            "petstore.pet/id"
                        ],
                        "properties": {
                            "petstore.pet/id": {
                                "type": "integer",
                                "format": "int64"
                            },
                            "petstore.pet/category": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                },
                                "description": "for example, [\"petstore.category/id\" 0]"
                            },
                            "petstore.pet/name": {
                                "type": "string",
                                "example": "doggie"
                            },
                            "petstore.pet/photoUrls": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "petstore.pet/tags": {
                                "type": "array",
                                "items": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    },
                                    "description": "for example, [\"petstore.tag/id\" 0]"
                                }
                            },
                            "petstore.pet/status": {
                                "type": "string",
                                "enum": [
                                    "available",
                                    "pending",
                                    "sold"
                                ],
                                "description": "pet status, one of three"
                            }
                        }
                    }
                }
            }
        },
        "deletePet": {
            "type": "object",
            "properties": {
                "payload": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "required": [
                            "db/id"
                        ],
                        "properties": {
                            "db/id": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                },
                                "description": "for example, {\"db/id\" [\"petstore.pet/id\" 0]}"
                            }
                        }
                    }
                }
            }
        },
        "updatePet": {
            "type": "object",
            "properties": {
                "payload": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "required": [
                            "db/id"
                        ],
                        "properties": {
                            "db/id": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "petstore.pet/category": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                },
                                "description": "for example, [\"petstore.category/id\" 0]"
                            },
                            "petstore.pet/name": {
                                "type": "string",
                                "example": "doggie"
                            },
                            "petstore.pet/photoUrls": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "petstore.pet/tags": {
                                "type": "array",
                                "items": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    },
                                    "description": "for example, [\"petstore.tag/id\" 0]"
                                }
                            },
                            "petstore.pet/status": {
                                "type": "string",
                                "enum": [
                                    "available",
                                    "pending",
                                    "sold"
                                ],
                                "description": "pet status, one of three"
                            }
                        }
                    }
                }
            }
        },
        "Tag": {
            "type": "object",
            "properties": {
                "petstore.tag/id": {
                    "type": "integer",
                    "format": "int64"
                },
                "petstore.tag/name": {
                    "type": "string"
                }
            }
        },
        "newTag": {
            "type": "object",
            "properties": {
                "payload": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "required": [
                            "petstore.tag/id",
                            "petstore.tag/name"
                        ],
                        "properties": {
                            "petstore.tag/id": {
                                "type": "integer",
                                "format": "int64"
                            },
                            "petstore.tag/name": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "Order": {
            "type": "object",
            "properties": {
                "petstore.order/id": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "petstore.order/petId": {
                    "type": "integer",
                    "format": "int32"
                },
                "petstore.order/quantity": {
                    "type": "integer",
                    "format": "int32"
                },
                "petstore.order/shipDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "petstore.order/status": {
                    "type": "string",
                    "description": "Order Status, placed, approved or delivered"
                },
                "petstore.order/complete": {
                    "type": "boolean"
                }
            }
        },
        "newOrder": {
            "type": "object",
            "properties": {
                "payload": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "required": [
                            "petstore.order/id"
                        ],
                        "properties": {
                            "petstore.order/id": {
                                "type": "integer",
                                "format": "int64"
                            },
                            "petstore.order/petId": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "petstore.order/quantity": {
                                "type": "integer",
                                "format": "int32"
                            },
                            "petstore.order/shipDate": {
                                "type": "string",
                                "format": "date-time"
                            },
                            "petstore.order/status": {
                                "type": "string",
                                "description": "Order Status, placed, approved or delivered"
                            },
                            "petstore.order/complete": {
                                "type": "boolean"
                            }
                        }
                    }
                }
            }
        },
        "deleteOrder": {
            "type": "object",
            "properties": {
                "payload": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "required": [
                            "db/id"
                        ],
                        "properties": {
                            "db/id": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                },
                                "description": "for example, {\"db/id\" [\"petstore.order/id\" 0]}"
                            }
                        }
                    }
                }
            }
        },
        "updateOrder": {
            "type": "object",
            "properties": {
                "payload": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "required": [
                            "db/id"
                        ],
                        "properties": {
                            "db/id": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "petstore.order/petId": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "petstore.order/quantity": {
                                "type": "integer",
                                "format": "int32"
                            },
                            "petstore.order/shipDate": {
                                "type": "string",
                                "format": "date-time"
                            },
                            "petstore.order/status": {
                                "type": "string",
                                "description": "Order Status, place, approved or delivered"
                            },
                            "petstore.order/complete": {
                                "type": "boolean"
                            }
                        }
                    }
                }
            }
        }
    }
}